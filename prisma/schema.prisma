// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  id              String            @id @default(cuid())
  name            String
  email           String            @unique
  password        String
  role            String            @default("user")
  createdBy       String
  updatedBy       String?
  createdAt       DateTime          @default(now()) // Automatically sets the current timestamp when the record is created
  updatedAt       DateTime          @updatedAt // Automatically updates the timestamp when the record is updated
  ItemTransaction ItemTransaction[]
}

model ItemTransaction {
  id             String          @id @default(cuid())
  item           Item            @relation(fields: [item_id], references: [id])
  item_id        String
  type           TransactionType
  quantityChange Int // Positive for inbound, negative for outbound
  performedBy    User            @relation(fields: [user_email], references: [email])
  user_email     String
  reason         String? // Optional reason for the transaction
  timestamp      DateTime        @default(now())
}

enum TransactionType {
  INBOUND // Item added to the fridge
  OUTBOUND // Item removed, used, or expired
}

model Item {
  id              String            @id @default(cuid())
  slug            String            @unique
  name            String
  quantity        Int               @default(1) // Amount of this item in stock
  category        Category          @relation(fields: [category_id], references: [id])
  category_id     String
  createdBy       String
  updatedBy       String?
  createdAt       DateTime          @default(now()) // Automatically sets the current timestamp when the record is created
  updatedAt       DateTime          @updatedAt // Automatically updates the timestamp when the record is updated
  ItemTransaction ItemTransaction[]
}

model Category {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  item      Item[]
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now()) // Automatically sets the current timestamp when the record is created
  updatedAt DateTime @updatedAt // Automatically updates the timestamp when the record is updated
}
